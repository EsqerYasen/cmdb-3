// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // (
			nil,      // )
			shift(4), // !
			nil,      // ,
			nil,      // value
			nil,      // string
			shift(5), // literal
			nil,      // notin
			nil,      // in
			nil,      // exists
			nil,      // exist
			nil,      // notexist
			nil,      // notexists
			nil,      // AND
			nil,      // &&
			nil,      // operator
			nil,      // equal
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // (
			nil,          // )
			nil,          // !
			nil,          // ,
			nil,          // value
			nil,          // string
			nil,          // literal
			nil,          // notin
			nil,          // in
			nil,          // exists
			nil,          // exist
			nil,          // notexist
			nil,          // notexists
			shift(7),     // AND
			shift(8),     // &&
			nil,          // operator
			nil,          // equal
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Expression
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(1), // AND, reduce: Expression
			reduce(1), // &&, reduce: Expression
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			shift(13), // notin
			shift(14), // in
			shift(15), // exists
			shift(16), // exist
			shift(17), // notexist
			shift(18), // notexists
			reduce(8), // AND, reduce: Condition
			reduce(8), // &&, reduce: Condition
			shift(19), // operator
			shift(20), // equal
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			shift(22), // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // $, reduce: MetaName
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			reduce(13), // notin, reduce: MetaName
			reduce(13), // in, reduce: MetaName
			reduce(13), // exists, reduce: MetaName
			reduce(13), // exist, reduce: MetaName
			reduce(13), // notexist, reduce: MetaName
			reduce(13), // notexists, reduce: MetaName
			reduce(13), // AND, reduce: MetaName
			reduce(13), // &&, reduce: MetaName
			reduce(13), // operator, reduce: MetaName
			reduce(13), // equal, reduce: MetaName
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // (
			nil,      // )
			shift(4), // !
			nil,      // ,
			nil,      // value
			nil,      // string
			shift(5), // literal
			nil,      // notin
			nil,      // in
			nil,      // exists
			nil,      // exist
			nil,      // notexist
			nil,      // notexists
			nil,      // AND
			nil,      // &&
			nil,      // operator
			nil,      // equal
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			nil,        // )
			reduce(20), // !, reduce: And
			nil,        // ,
			nil,        // value
			nil,        // string
			reduce(20), // literal, reduce: And
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			nil,        // )
			reduce(21), // !, reduce: And
			nil,        // ,
			nil,        // value
			nil,        // string
			reduce(21), // literal, reduce: And
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(24), // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			shift(26), // value
			shift(27), // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			shift(26), // value
			shift(27), // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(6), // AND, reduce: Condition
			reduce(6), // &&, reduce: Condition
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(14), // (, reduce: InOperator
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(15), // (, reduce: InOperator
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(16), // $, reduce: ExistOperator
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(16), // AND, reduce: ExistOperator
			reduce(16), // &&, reduce: ExistOperator
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // $, reduce: ExistOperator
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(17), // AND, reduce: ExistOperator
			reduce(17), // &&, reduce: ExistOperator
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // $, reduce: ExistOperator
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(18), // AND, reduce: ExistOperator
			reduce(18), // &&, reduce: ExistOperator
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // $, reduce: ExistOperator
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(19), // AND, reduce: ExistOperator
			reduce(19), // &&, reduce: ExistOperator
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			reduce(22), // value, reduce: Operator
			reduce(22), // string, reduce: Operator
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			reduce(23), // value, reduce: EqualOperator
			reduce(23), // string, reduce: EqualOperator
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(7), // AND, reduce: Condition
			reduce(7), // &&, reduce: Condition
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // $, reduce: MetaName
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(13), // AND, reduce: MetaName
			reduce(13), // &&, reduce: MetaName
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Expression
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(2), // AND, reduce: Expression
			reduce(2), // &&, reduce: Expression
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			shift(31), // value
			shift(32), // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(4), // AND, reduce: Condition
			reduce(4), // &&, reduce: Condition
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // $, reduce: Value
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(11), // AND, reduce: Value
			reduce(11), // &&, reduce: Value
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // $, reduce: Value
			nil,        // (
			nil,        // )
			nil,        // !
			nil,        // ,
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			reduce(12), // AND, reduce: Value
			reduce(12), // &&, reduce: Value
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(5), // AND, reduce: Condition
			reduce(5), // &&, reduce: Condition
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			shift(33), // )
			nil,       // !
			shift(34), // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			reduce(9), // ), reduce: Values
			nil,       // !
			reduce(9), // ,, reduce: Values
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			reduce(11), // ), reduce: Value
			nil,        // !
			reduce(11), // ,, reduce: Value
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			reduce(12), // ), reduce: Value
			nil,        // !
			reduce(12), // ,, reduce: Value
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: Condition
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			nil,       // value
			nil,       // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			reduce(3), // AND, reduce: Condition
			reduce(3), // &&, reduce: Condition
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // (
			nil,       // )
			nil,       // !
			nil,       // ,
			shift(31), // value
			shift(32), // string
			nil,       // literal
			nil,       // notin
			nil,       // in
			nil,       // exists
			nil,       // exist
			nil,       // notexist
			nil,       // notexists
			nil,       // AND
			nil,       // &&
			nil,       // operator
			nil,       // equal
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // (
			reduce(10), // ), reduce: Values
			nil,        // !
			reduce(10), // ,, reduce: Values
			nil,        // value
			nil,        // string
			nil,        // literal
			nil,        // notin
			nil,        // in
			nil,        // exists
			nil,        // exist
			nil,        // notexist
			nil,        // notexists
			nil,        // AND
			nil,        // &&
			nil,        // operator
			nil,        // equal
		},
	},
}
